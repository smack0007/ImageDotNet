/// <auto-generated />
using System;

namespace ImageDotNet
{
    public partial class Image<T>
    {
        public bool IsBgr24() => typeof(T) == typeof(Bgr24);

        public Image<Bgr24> ToBgr24() => new Image<Bgr24>(Width, Height, PixelHelper.Convert<T, Bgr24>(_pixels));

        public bool IsBgra32() => typeof(T) == typeof(Bgra32);

        public Image<Bgra32> ToBgra32() => new Image<Bgra32>(Width, Height, PixelHelper.Convert<T, Bgra32>(_pixels));

        public bool IsGray8() => typeof(T) == typeof(Gray8);

        public Image<Gray8> ToGray8() => new Image<Gray8>(Width, Height, PixelHelper.Convert<T, Gray8>(_pixels));

        public bool IsRgb24() => typeof(T) == typeof(Rgb24);

        public Image<Rgb24> ToRgb24() => new Image<Rgb24>(Width, Height, PixelHelper.Convert<T, Rgb24>(_pixels));

        public bool IsRgba32() => typeof(T) == typeof(Rgba32);

        public Image<Rgba32> ToRgba32() => new Image<Rgba32>(Width, Height, PixelHelper.Convert<T, Rgba32>(_pixels));        
    }
}