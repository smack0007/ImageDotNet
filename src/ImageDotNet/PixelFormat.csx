using System;
using System.IO;
using System.Linq;
using System.Text;

var tab = "    ";

var pixelFormats = Directory.EnumerateFiles(Path.Combine(Path.GetDirectoryName(ProjectFilePath), "PixelFormats"))
    .Select(x => Path.GetFileNameWithoutExtension(x));

var pixelFormatEnum = new StringBuilder(1024);
foreach (var pixelFormat in pixelFormats)
{
    pixelFormatEnum.AppendLine($"{tab}{tab}{pixelFormat},");
}

var getPixelType = new StringBuilder(1024);
foreach (var pixelFormat in pixelFormats)
{
    getPixelType.AppendLine($"{tab}{tab}{tab}{tab}case PixelFormat.{pixelFormat}: return typeof({pixelFormat});");
}

Output.SetExtension("g.cs");
Output.WriteLine(
$@"/// <auto-generated />
using System;
using ImageDotNet.PixelFormats;

namespace ImageDotNet
{{
    public enum PixelFormat
    {{
{pixelFormatEnum.ToString().TrimEnd()}
    }}

    public static class PixelFormatExtensions
    {{
        public static Type ToPixelType(this PixelFormat format)
        {{
            switch (format)
            {{
{getPixelType.ToString().TrimEnd()}
            }}

            throw new ImageDotNetException($""Unknown {{nameof(PixelFormat)}}."");
        }}
    }}
}}");
